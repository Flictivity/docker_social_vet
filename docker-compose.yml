version: '3.4'

services:
  storage:
    container_name: storage
    image: postgres:16.0
    restart: always
    command: ["postgres", "-c", "log_statement=mod"]
    ports:
      - "${POSTGRES_OUTER_PORT}:${POSTGRES_INNER_PORT}"
    environment:
      POSTGRES_DB: $POSTGRES_DATABASE_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ~/volumes/postgres:/var/lib/postgresql/data
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE_NAME} -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    container_name: api
    image: flictivity/social_vet_backend:latest
    restart: on-failure
    build:
      context: .
      dockerfile: /Dockerfile
    depends_on:
      storage:
        condition: service_healthy
    ports:
      - "${API_HTTP_PORT}:5000"
    environment:
      ASPNETCORE_ENVIRONMENT: $ASPNETCORE_ENVIRONMENT
      ASPNETCORE_URLS: http://+:5000;
    stdin_open: true
    tty: true
    
  app:
    container_name: app
    image: flictivity/social_vet_frontend:latest
    build:
      context: .
      dockerfile: SoVet.BlazorWebClient/Dockerfile
    depends_on:
      api:
        condition: service_started
    ports:
      - "${APP_HTTP_PORT}:80"
      - "${APP_HTTPS_PORT}:443"
    stdin_open: true
    tty: true