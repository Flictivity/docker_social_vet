--
-- PostgreSQL database dump
--

-- Dumped from database version 16.0 (Debian 16.0-1.pgdg120+1)
-- Dumped by pg_dump version 16.0 (Debian 16.0-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: identity; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA identity;


ALTER SCHEMA identity OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: AspNetRoleClaims; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE identity."AspNetRoleClaims" (
    "Id" integer NOT NULL,
    "RoleId" integer NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE identity."AspNetRoleClaims" OWNER TO postgres;

--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE; Schema: identity; Owner: postgres
--

ALTER TABLE identity."AspNetRoleClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME identity."AspNetRoleClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetRoles; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE identity."AspNetRoles" (
    "Id" integer NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text
);


ALTER TABLE identity."AspNetRoles" OWNER TO postgres;

--
-- Name: AspNetRoles_Id_seq; Type: SEQUENCE; Schema: identity; Owner: postgres
--

ALTER TABLE identity."AspNetRoles" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME identity."AspNetRoles_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetUserClaims; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE identity."AspNetUserClaims" (
    "Id" integer NOT NULL,
    "UserId" integer NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE identity."AspNetUserClaims" OWNER TO postgres;

--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE; Schema: identity; Owner: postgres
--

ALTER TABLE identity."AspNetUserClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME identity."AspNetUserClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetUserLogins; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE identity."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" integer NOT NULL
);


ALTER TABLE identity."AspNetUserLogins" OWNER TO postgres;

--
-- Name: AspNetUserRoles; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE identity."AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL
);


ALTER TABLE identity."AspNetUserRoles" OWNER TO postgres;

--
-- Name: AspNetUserTokens; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE identity."AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text
);


ALTER TABLE identity."AspNetUserTokens" OWNER TO postgres;

--
-- Name: AspNetUsers; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE identity."AspNetUsers" (
    "Id" integer NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL
);


ALTER TABLE identity."AspNetUsers" OWNER TO postgres;

--
-- Name: AspNetUsers_Id_seq; Type: SEQUENCE; Schema: identity; Owner: postgres
--

ALTER TABLE identity."AspNetUsers" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME identity."AspNetUsers_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: animal_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.animal_type (
    id integer NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.animal_type OWNER TO postgres;

--
-- Name: animal_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.animal_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.animal_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: appointment_diagnoses; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.appointment_diagnoses (
    id integer NOT NULL,
    result integer NOT NULL,
    edit_date date NOT NULL,
    appointment_id integer NOT NULL,
    diagnosis_id integer NOT NULL
);


ALTER TABLE public.appointment_diagnoses OWNER TO postgres;

--
-- Name: appointment_diagnoses_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.appointment_diagnoses ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.appointment_diagnoses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: appointment_facilities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.appointment_facilities (
    id integer NOT NULL,
    count integer NOT NULL,
    discount integer NOT NULL,
    sum numeric NOT NULL,
    appointment_id integer NOT NULL,
    facility_id integer NOT NULL
);


ALTER TABLE public.appointment_facilities OWNER TO postgres;

--
-- Name: appointment_facilities_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.appointment_facilities ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.appointment_facilities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: appointments; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.appointments (
    id integer NOT NULL,
    purpose text NOT NULL,
    anamnesis text,
    information text,
    change_date timestamp with time zone NOT NULL,
    employee_id integer NOT NULL,
    patient_id integer NOT NULL,
    appointment_status integer DEFAULT 0 NOT NULL,
    creation_date timestamp with time zone DEFAULT '-infinity'::timestamp with time zone NOT NULL,
    recommendations text,
    registration_id integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.appointments OWNER TO postgres;

--
-- Name: appointments_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.appointments ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.appointments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: clients; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.clients (
    id integer NOT NULL,
    name text NOT NULL,
    address text
);


ALTER TABLE public.clients OWNER TO postgres;

--
-- Name: clients_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.clients ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.clients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: clinic_schedules; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.clinic_schedules (
    id integer NOT NULL,
    start_time interval NOT NULL,
    end_time interval NOT NULL,
    clinic_name text DEFAULT ''::text NOT NULL,
    appointment_duration double precision DEFAULT 0.0 NOT NULL,
    pause_duration double precision DEFAULT 0.0 NOT NULL
);


ALTER TABLE public.clinic_schedules OWNER TO postgres;

--
-- Name: clinic_schedules_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.clinic_schedules ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.clinic_schedules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: diagnoses; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.diagnoses (
    id integer NOT NULL,
    name text NOT NULL,
    description text
);


ALTER TABLE public.diagnoses OWNER TO postgres;

--
-- Name: diagnoses_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.diagnoses ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.diagnoses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: employees; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.employees (
    id integer NOT NULL,
    name text NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL
);


ALTER TABLE public.employees OWNER TO postgres;

--
-- Name: employees_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.employees ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.employees_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: facilities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.facilities (
    id integer NOT NULL,
    name text NOT NULL,
    cost numeric NOT NULL,
    facility_category_id integer NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL
);


ALTER TABLE public.facilities OWNER TO postgres;

--
-- Name: facilities_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.facilities ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.facilities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: facility_categories; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.facility_categories (
    id integer NOT NULL,
    name text NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL
);


ALTER TABLE public.facility_categories OWNER TO postgres;

--
-- Name: facility_categories_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.facility_categories ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.facility_categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: patients; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.patients (
    id integer NOT NULL,
    name text NOT NULL,
    animal_type_id integer NOT NULL,
    comment text,
    client_id integer NOT NULL,
    birth_date date DEFAULT '-infinity'::date NOT NULL
);


ALTER TABLE public.patients OWNER TO postgres;

--
-- Name: patients_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.patients ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.patients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: registrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.registrations (
    id integer NOT NULL,
    comment text,
    start_time timestamp with time zone NOT NULL,
    client_id integer NOT NULL,
    employee_id integer NOT NULL
);


ALTER TABLE public.registrations OWNER TO postgres;

--
-- Name: registrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.registrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.registrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: AspNetRoleClaims; Type: TABLE DATA; Schema: identity; Owner: postgres
--

COPY identity."AspNetRoleClaims" ("Id", "RoleId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetRoles; Type: TABLE DATA; Schema: identity; Owner: postgres
--

COPY identity."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") FROM stdin;
1	Клиент	КЛИЕНТ	\N
2	Ветеринар	ВЕТЕРИНАР	\N
3	Администратор	АДМИНИСТРАТОР	\N
\.


--
-- Data for Name: AspNetUserClaims; Type: TABLE DATA; Schema: identity; Owner: postgres
--

COPY identity."AspNetUserClaims" ("Id", "UserId", "ClaimType", "ClaimValue") FROM stdin;
1	2	ClientId	4
2	3	ClientId	5
3	4	EmployeeId	5
4	5	EmployeeId	6
5	6	EmployeeId	31
7	8	EmployeeId	43
44	45	ClientId	6
45	46	EmployeeId	84
46	47	ClientId	7
47	48	ClientId	9
\.


--
-- Data for Name: AspNetUserLogins; Type: TABLE DATA; Schema: identity; Owner: postgres
--

COPY identity."AspNetUserLogins" ("LoginProvider", "ProviderKey", "ProviderDisplayName", "UserId") FROM stdin;
\.


--
-- Data for Name: AspNetUserRoles; Type: TABLE DATA; Schema: identity; Owner: postgres
--

COPY identity."AspNetUserRoles" ("UserId", "RoleId") FROM stdin;
3	1
8	2
6	2
2	1
45	1
46	2
47	1
48	1
4	2
5	3
\.


--
-- Data for Name: AspNetUserTokens; Type: TABLE DATA; Schema: identity; Owner: postgres
--

COPY identity."AspNetUserTokens" ("UserId", "LoginProvider", "Name", "Value") FROM stdin;
\.


--
-- Data for Name: AspNetUsers; Type: TABLE DATA; Schema: identity; Owner: postgres
--

COPY identity."AspNetUsers" ("Id", "UserName", "NormalizedUserName", "Email", "NormalizedEmail", "EmailConfirmed", "PasswordHash", "SecurityStamp", "ConcurrencyStamp", "PhoneNumber", "PhoneNumberConfirmed", "TwoFactorEnabled", "LockoutEnd", "LockoutEnabled", "AccessFailedCount") FROM stdin;
45	gin@mail.ru	GIN@MAIL.RU	gin@mail.ru	GIN@MAIL.RU	f	AQAAAAIAAYagAAAAELqvGUeVlEUSbysSLl2WmniNh+Q7TTv6GeeEQIHEFDgH11AFQiZ9WiClA3W8icSZtQ==	2S3QII3JBMOLXZG3NL7YHWVI32LNDI4F	74c2c724-1796-4a8d-9f0d-13edb37149d3	\N	f	f	\N	t	0
3	test@test.com	TEST@TEST.COM	test@test.com	TEST@TEST.COM	f	AQAAAAIAAYagAAAAEOLH3dkgj8reVXPz7CS2PHsfjUAnxY3IjTFDhbXY0xFb5Wu8LFdiCcN138/t44a24w==	YWIIVSWHS3H3XOQKTVN7CBPUNLHYZ2RF	4f30cd20-1777-4753-b9de-b33f6e18ed25	\N	f	f	\N	t	0
2	riazonbin@gmail.com	RIAZONBIN@GMAIL.COM	riazonbin@gmail.com	RIAZONBIN@GMAIL.COM	f	AQAAAAIAAYagAAAAEJOoUItFyV5mc5TX/42VsxCmtDaYDZk5b1YwbnAXymOzvAGIx+PxJAxZdsDOvRB1aA==	5HWLZHMXXN3T4UCHQZMVXKEAKADKOE6H	ea43925a-bcc3-454d-a0ff-3a571356fd8a	\N	f	f	\N	t	0
5	petrov@mail.ru	PETROV@MAIL.RU	petrov@mail.ru	PETROV@MAIL.RU	f	AQAAAAIAAYagAAAAENpYpuAL9Nh3ZPaGqvA5OwxOKDxxF6jdw4RAAPHEuPr1I53LgfUYwGuspn/fHk+jCA==	BYD6NAHCIURZ5NIATMWGVOYUW2WN4CLT	227be7d8-bad3-4d4b-a5a5-723ae7b9736f	\N	f	f	\N	t	0
48	bulat_sa1@mail.ru	BULAT_SA1@MAIL.RU	bulat_sa1@mail.ru	BULAT_SA1@MAIL.RU	f	AQAAAAIAAYagAAAAEKG4yf1FelD4YC8m92O5TTniEp2S5BBQ5z14SWswd3PSa5zrC8N2Q1ZA8qlaegjuyg==	XG7SUGPYOCVYRKREZ25YURTAEWNHBBGA	47720d11-eae9-4f95-8009-2622bc4687ee	\N	f	f	\N	t	0
8	igorVet@gmail.com	IGORVET@GMAIL.COM	igorVet@gmail.com	IGORVET@GMAIL.COM	f	AQAAAAIAAYagAAAAEH3+gk7q95B2WrvKsAMj8zeXROgQ6weJh6aDj/rEUzcRoAkMjqS6hRIEcGdhtm++PA==	C55JTFUBYCQKEXBDPTQYKVYRAMGT7B6K	1a65286f-5674-4ef6-856c-c5a57b371184	\N	f	f	\N	t	0
6	shigIvan@mail.ru	SHIGIVAN@MAIL.RU	shigIvan2@mail.ru	SHIGIVAN2@MAIL.RU	f	AQAAAAIAAYagAAAAEOc2DaLVqW+Br2IgFBRI3j7WrYAfxPgprQdn7Cqmklyvcy1x6WVNL9rokVHUhDVCYw==	FJ7UB33L7YLLAIXEQEK6Z3IWOD67S5WA	0d54162a-7f68-4868-92f0-7a76a0539ef9	\N	f	f	\N	t	0
4	wingimobile@gmail.com	WINGIMOBILE@GMAIL.COM	wingimobile@gmail.com	WINGIMOBILE@GMAIL.COM	f	AQAAAAIAAYagAAAAEO48oE52Rdco2Qv1PDxcOhjNWTs7ThHcrFJ5MKEVTuy2GuiubhT7xrTmFDe91beZhg==	W3SE6N73ZQM42AQL6TN7FHSGOLAHQBIU	1bf115f3-92cd-4be4-aab6-dc9a08fc4fd5	\N	f	f	\N	t	0
47	turushkin@mail.ru	TURUSHKIN@MAIL.RU	turushkin@mail.ru	TURUSHKIN@MAIL.RU	f	AQAAAAIAAYagAAAAELDbemwdM1oMoXTseSIy+MGuyr0vkNYQsBbR2yogz7Kx5pqRvI6XYv5GVhbN7Pa0dA==	QVLWL67N2T2GR4D5ZRG27NS6AAKIJEO2	bec13b7f-1800-4f51-b422-9d83d49ec22b	\N	f	f	\N	t	0
46	tgchannelbus@gmail.com	TGCHANNELBUS@GMAIL.COM	tgchannelbus@gmail.com	TGCHANNELBUS@GMAIL.COM	f	AQAAAAIAAYagAAAAEGWJHeIF/AoX8ucjE4ZptlRDfeHzdwONh5X9B9hm+X37eFpK3quZ7LDsHAEnz29+cg==	X55XLSWAYG7QX326YQ6LTNMVRN3TNRYS	b04e8a62-a45c-4c2d-9b28-ce125af37cf1	\N	f	f	\N	t	0
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" (migration_id, product_version) FROM stdin;
20231027124736_InitialMigration	7.0.13
20231101190926_ClinicSchedule_Edit	7.0.13
20231101201830_Edit_Clinic	7.0.13
20231110071231_AddAnimalType	7.0.13
20231116212946_ChangeAppointment	7.0.13
20231116215446_RemoveRecommendationRelation	7.0.13
20231117091545_EditDiagnosis	7.0.13
20231117200923_RemoveRegistrationType	7.0.13
20231117203751_AddRegistrationToAppointment	7.0.13
20231118051251_DeleteUnusedEntities	7.0.13
20231118194711_DeleteVaccination	7.0.13
20240325102511_ChangePatientAge	7.0.13
20240329144709_ClinicScheduleUpdate	7.0.13
20240402103201_addIsDeletedFields	7.0.13
20240402133942_AddIsDeletedFieldToFacilityCategory	7.0.13
20240411131720_AddAppointmentDiagnosisRelation	7.0.13
\.


--
-- Data for Name: animal_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.animal_type (id, name) FROM stdin;
1	Кошка
2	Собака
\.


--
-- Data for Name: appointment_diagnoses; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.appointment_diagnoses (id, result, edit_date, appointment_id, diagnosis_id) FROM stdin;
6	0	2024-05-02	9	5
10	0	2024-05-22	10	5
12	0	2024-05-22	3	5
\.


--
-- Data for Name: appointment_facilities; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.appointment_facilities (id, count, discount, sum, appointment_id, facility_id) FROM stdin;
3	1	0	1000	4	7
7	1	1	286.11	9	3
6	1	0	289	4	3
8	2	0	2000	4	7
9	1	0	3500	11	6
2	1	0	400	3	1
\.


--
-- Data for Name: appointments; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.appointments (id, purpose, anamnesis, information, change_date, employee_id, patient_id, appointment_status, creation_date, recommendations, registration_id) FROM stdin;
5		\N	\N	2024-02-07 11:05:47.67+00	5	5	0	2023-11-19 15:51:20.907+00	\N	9
6		\N	\N	2024-02-20 16:14:19.513+00	5	3	0	2024-02-20 16:14:19.513+00	\N	17
7		\N	\N	2024-03-25 18:50:58.963+00	5	7	0	2024-03-25 18:50:58.963+00	\N	18
8		\N	\N	2024-04-01 14:53:34.382+00	84	7	0	2024-04-01 14:53:34.382+00	\N	24
3	Тест	-	Проведен	2024-04-18 21:30:02.287+00	5	1	1	2023-11-17 23:53:05.679+00	Мыть лапы каждые 2 дня	10
9	Обследование	\N	Проведен осмотр\nУстановлен диагноз	2024-05-16 17:41:59.656+00	5	7	1	2024-05-02 12:36:42.484+00	\N	29
4	Узи желудка	\N	\N	2024-05-17 12:41:50.122+00	84	7	1	2023-11-18 22:19:11.419+00	\N	13
11		\N	\N	2024-05-21 15:28:35.746+00	84	10	2	2024-05-21 15:28:21.755+00	\N	33
10		\N	\N	2024-05-22 21:04:23.397+00	5	9	0	2024-05-20 19:58:15.035+00	\N	31
\.


--
-- Data for Name: clients; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.clients (id, name, address) FROM stdin;
5	Сафиуллин Ринат	\N
4	Riyaz Zaripov	Kazan city
6	Гиниятуллин Ильяс	Казань
7	Турушкин Сергей	Алексеевское
9	Сайфуллин Булат Илнурович	г.Казань
\.


--
-- Data for Name: clinic_schedules; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.clinic_schedules (id, start_time, end_time, clinic_name, appointment_duration, pause_duration) FROM stdin;
1	08:00:00	20:00:00	SoCialVet	1	30
\.


--
-- Data for Name: diagnoses; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.diagnoses (id, name, description) FROM stdin;
5	Лешай	группа заболеваний кожи, при которых на ней появляются пятна и бляшки, она зудит и шелушится
8	Рак печени	Уничтожение клеток печение путем прорастания опухоли (злокач.)
7	Отодекоз	инвазионное заболевание кошек, собак и пушных зверей, вызываемое паразитированием клещей в наружном слуховом проходе и на внутренней поверхности ушных раковин.
9	Отит	Воспаление уха, часто вызванное инфекцией, аллергией или паразитами. Симптомы включают зуд, выделения из ушей и неприятный запах.
10	Дерматит	Воспаление кожи, часто связанное с аллергиями, инфекциями или паразитами. Проявляется в виде зуда, покраснения и высыпаний.
11	Панкреатит	Воспаление поджелудочной железы, которое может быть острым или хроническим. Симптомы включают рвоту, диарею, боль в животе и потерю аппетита.
12	Гипертиреоз	Повышенная активность щитовидной железы, чаще встречается у кошек. Симптомы включают потерю веса, повышенный аппетит и беспокойство
\.


--
-- Data for Name: employees; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.employees (id, name, is_deleted) FROM stdin;
84	Андерзянов Фаиль	f
5	Шарипов Камиль Рамилевич	f
6	Администратор	f
\.


--
-- Data for Name: facilities; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.facilities (id, name, cost, facility_category_id, is_deleted) FROM stdin;
1	Обрезка когтей собакам	400	1	f
2	Обрезка когтей кошкам	300	1	f
9	Груминг	2000	3	f
10	qwdqdw	10002222222	2	t
3	Чистка ушей кошка/собака	289	2	f
4	Чистка ушей ласьоном	350	2	f
6	Стерелизация	3500	3	f
11	123	3	3	t
7	УЗИ	1200	7	f
5	Рентген	800	7	f
12	ЭКГ	400	7	f
13	Лечение зубов и десен	2300	8	f
14	Экстракция зубов	3560	8	f
15	Чипирование	300	3	f
\.


--
-- Data for Name: facility_categories; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.facility_categories (id, name, is_deleted) FROM stdin;
2	Чистка ушей	f
4	Проверо	t
3	Особые	f
5	Ntcn	t
1	Стрижка когтей животным	f
6	цвцв	t
7	Диагностические услуги	f
8	Стоматологические услуги:	f
\.


--
-- Data for Name: patients; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.patients (id, name, animal_type_id, comment, client_id, birth_date) FROM stdin;
1	Шарик	2	gggg	4	2024-03-25
3	Бобик	2	\N	5	2024-03-25
2	Ибрай	1	\N	5	2024-03-25
5	Нормат	2	\N	4	2024-03-25
7	Акбай	2	\N	6	2023-04-30
8	Петрушка	1	\N	5	2024-03-26
6	Паша	1	\N	4	2024-03-25
9	Мурка	1	\N	7	2023-02-09
10	Феникс	1	\N	9	2023-08-10
4	Барсик	1	\N	5	2024-03-25
\.


--
-- Data for Name: registrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.registrations (id, comment, start_time, client_id, employee_id) FROM stdin;
3	\N	2023-11-09 09:00:00+00	4	5
6	\N	2023-11-09 08:00:00+00	4	5
7	Тест	2023-11-09 10:00:00+00	4	5
8	\N	2023-11-09 08:00:00+00	4	6
9	Проверочка лап	2023-11-10 11:00:00+00	4	5
10	\N	2023-11-13 08:00:00+00	4	5
14	\N	2023-11-20 08:00:00+00	6	5
15	\N	2023-11-20 09:00:00+00	6	5
16	\N	2023-11-20 10:00:00+00	6	5
17	\N	2024-02-20 08:00:00+00	5	5
18	\N	2024-03-25 14:00:00+00	6	5
19	\N	2024-03-25 20:00:00+00	6	5
20	\N	2024-03-30 08:00:00+00	6	5
21	\N	2024-03-28 08:00:00+00	5	5
22	\N	2024-03-28 12:30:00+00	6	5
23	\N	2024-03-29 18:30:00+00	6	84
24	\N	2024-04-01 15:30:00+00	6	84
29	\N	2024-05-02 16:00:00+00	6	5
12	\N	2023-11-18 09:00:00+00	4	84
13	Тестовая запись	2023-11-18 13:00:00+00	6	84
11	\N	2023-11-18 08:00:00+00	4	84
2	\N	2023-11-07 08:00:00+00	4	5
30	\N	2024-05-20 20:00:00+00	6	5
31	Болит ухо у кошки	2024-05-21 09:30:00+00	7	5
33	\N	2024-05-21 15:30:00+00	9	84
34	\N	2024-05-21 17:00:00+00	9	84
\.


--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE SET; Schema: identity; Owner: postgres
--

SELECT pg_catalog.setval('identity."AspNetRoleClaims_Id_seq"', 1, false);


--
-- Name: AspNetRoles_Id_seq; Type: SEQUENCE SET; Schema: identity; Owner: postgres
--

SELECT pg_catalog.setval('identity."AspNetRoles_Id_seq"', 3, true);


--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE SET; Schema: identity; Owner: postgres
--

SELECT pg_catalog.setval('identity."AspNetUserClaims_Id_seq"', 47, true);


--
-- Name: AspNetUsers_Id_seq; Type: SEQUENCE SET; Schema: identity; Owner: postgres
--

SELECT pg_catalog.setval('identity."AspNetUsers_Id_seq"', 48, true);


--
-- Name: animal_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.animal_type_id_seq', 2, true);


--
-- Name: appointment_diagnoses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.appointment_diagnoses_id_seq', 14, true);


--
-- Name: appointment_facilities_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.appointment_facilities_id_seq', 9, true);


--
-- Name: appointments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.appointments_id_seq', 11, true);


--
-- Name: clients_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.clients_id_seq', 11, true);


--
-- Name: clinic_schedules_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.clinic_schedules_id_seq', 1, true);


--
-- Name: diagnoses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.diagnoses_id_seq', 12, true);


--
-- Name: employees_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.employees_id_seq', 84, true);


--
-- Name: facilities_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.facilities_id_seq', 15, true);


--
-- Name: facility_categories_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.facility_categories_id_seq', 8, true);


--
-- Name: patients_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.patients_id_seq', 10, true);


--
-- Name: registrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.registrations_id_seq', 34, true);


--
-- Name: AspNetRoleClaims PK_AspNetRoleClaims; Type: CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetRoleClaims"
    ADD CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetRoles PK_AspNetRoles; Type: CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetRoles"
    ADD CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id");


--
-- Name: AspNetUserClaims PK_AspNetUserClaims; Type: CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserClaims"
    ADD CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetUserLogins PK_AspNetUserLogins; Type: CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserLogins"
    ADD CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey");


--
-- Name: AspNetUserRoles PK_AspNetUserRoles; Type: CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserRoles"
    ADD CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId");


--
-- Name: AspNetUserTokens PK_AspNetUserTokens; Type: CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserTokens"
    ADD CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name");


--
-- Name: AspNetUsers PK_AspNetUsers; Type: CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUsers"
    ADD CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id");


--
-- Name: __EFMigrationsHistory pk___ef_migrations_history; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id);


--
-- Name: animal_type pk_animal_type; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.animal_type
    ADD CONSTRAINT pk_animal_type PRIMARY KEY (id);


--
-- Name: appointment_diagnoses pk_appointment_diagnoses; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointment_diagnoses
    ADD CONSTRAINT pk_appointment_diagnoses PRIMARY KEY (id);


--
-- Name: appointment_facilities pk_appointment_facilities; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointment_facilities
    ADD CONSTRAINT pk_appointment_facilities PRIMARY KEY (id);


--
-- Name: appointments pk_appointments; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointments
    ADD CONSTRAINT pk_appointments PRIMARY KEY (id);


--
-- Name: clients pk_clients; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.clients
    ADD CONSTRAINT pk_clients PRIMARY KEY (id);


--
-- Name: clinic_schedules pk_clinic_schedules; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.clinic_schedules
    ADD CONSTRAINT pk_clinic_schedules PRIMARY KEY (id);


--
-- Name: diagnoses pk_diagnoses; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.diagnoses
    ADD CONSTRAINT pk_diagnoses PRIMARY KEY (id);


--
-- Name: employees pk_employees; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.employees
    ADD CONSTRAINT pk_employees PRIMARY KEY (id);


--
-- Name: facilities pk_facilities; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.facilities
    ADD CONSTRAINT pk_facilities PRIMARY KEY (id);


--
-- Name: facility_categories pk_facility_categories; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.facility_categories
    ADD CONSTRAINT pk_facility_categories PRIMARY KEY (id);


--
-- Name: patients pk_patients; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.patients
    ADD CONSTRAINT pk_patients PRIMARY KEY (id);


--
-- Name: registrations pk_registrations; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.registrations
    ADD CONSTRAINT pk_registrations PRIMARY KEY (id);


--
-- Name: EmailIndex; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX "EmailIndex" ON identity."AspNetUsers" USING btree ("NormalizedEmail");


--
-- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON identity."AspNetRoleClaims" USING btree ("RoleId");


--
-- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX "IX_AspNetUserClaims_UserId" ON identity."AspNetUserClaims" USING btree ("UserId");


--
-- Name: IX_AspNetUserLogins_UserId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX "IX_AspNetUserLogins_UserId" ON identity."AspNetUserLogins" USING btree ("UserId");


--
-- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON identity."AspNetUserRoles" USING btree ("RoleId");


--
-- Name: RoleNameIndex; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE UNIQUE INDEX "RoleNameIndex" ON identity."AspNetRoles" USING btree ("NormalizedName");


--
-- Name: UserNameIndex; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE UNIQUE INDEX "UserNameIndex" ON identity."AspNetUsers" USING btree ("NormalizedUserName");


--
-- Name: ix_appointment_diagnoses_appointment_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_appointment_diagnoses_appointment_id ON public.appointment_diagnoses USING btree (appointment_id);


--
-- Name: ix_appointment_diagnoses_diagnosis_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_appointment_diagnoses_diagnosis_id ON public.appointment_diagnoses USING btree (diagnosis_id);


--
-- Name: ix_appointment_facilities_appointment_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_appointment_facilities_appointment_id ON public.appointment_facilities USING btree (appointment_id);


--
-- Name: ix_appointment_facilities_facility_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_appointment_facilities_facility_id ON public.appointment_facilities USING btree (facility_id);


--
-- Name: ix_appointments_employee_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_appointments_employee_id ON public.appointments USING btree (employee_id);


--
-- Name: ix_appointments_patient_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_appointments_patient_id ON public.appointments USING btree (patient_id);


--
-- Name: ix_appointments_registration_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_appointments_registration_id ON public.appointments USING btree (registration_id);


--
-- Name: ix_facilities_facility_category_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_facilities_facility_category_id ON public.facilities USING btree (facility_category_id);


--
-- Name: ix_patients_animal_type_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_patients_animal_type_id ON public.patients USING btree (animal_type_id);


--
-- Name: ix_patients_client_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_patients_client_id ON public.patients USING btree (client_id);


--
-- Name: ix_registrations_client_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_registrations_client_id ON public.registrations USING btree (client_id);


--
-- Name: ix_registrations_employee_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ix_registrations_employee_id ON public.registrations USING btree (employee_id);


--
-- Name: AspNetRoleClaims FK_AspNetRoleClaims_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetRoleClaims"
    ADD CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES identity."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserClaims FK_AspNetUserClaims_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserClaims"
    ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES identity."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserLogins FK_AspNetUserLogins_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserLogins"
    ADD CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES identity."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES identity."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES identity."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserTokens FK_AspNetUserTokens_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: identity; Owner: postgres
--

ALTER TABLE ONLY identity."AspNetUserTokens"
    ADD CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES identity."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: appointment_diagnoses fk_appointment_diagnoses_appointments_appointment_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointment_diagnoses
    ADD CONSTRAINT fk_appointment_diagnoses_appointments_appointment_id FOREIGN KEY (appointment_id) REFERENCES public.appointments(id) ON DELETE CASCADE;


--
-- Name: appointment_diagnoses fk_appointment_diagnoses_diagnoses_diagnosis_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointment_diagnoses
    ADD CONSTRAINT fk_appointment_diagnoses_diagnoses_diagnosis_id FOREIGN KEY (diagnosis_id) REFERENCES public.diagnoses(id) ON DELETE CASCADE;


--
-- Name: appointment_facilities fk_appointment_facilities_appointments_appointment_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointment_facilities
    ADD CONSTRAINT fk_appointment_facilities_appointments_appointment_id FOREIGN KEY (appointment_id) REFERENCES public.appointments(id) ON DELETE CASCADE;


--
-- Name: appointment_facilities fk_appointment_facilities_facilities_facility_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointment_facilities
    ADD CONSTRAINT fk_appointment_facilities_facilities_facility_id FOREIGN KEY (facility_id) REFERENCES public.facilities(id) ON DELETE CASCADE;


--
-- Name: appointments fk_appointments_employees_employee_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointments
    ADD CONSTRAINT fk_appointments_employees_employee_id FOREIGN KEY (employee_id) REFERENCES public.employees(id) ON DELETE CASCADE;


--
-- Name: appointments fk_appointments_patients_patient_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointments
    ADD CONSTRAINT fk_appointments_patients_patient_id FOREIGN KEY (patient_id) REFERENCES public.patients(id) ON DELETE CASCADE;


--
-- Name: appointments fk_appointments_registrations_registration_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.appointments
    ADD CONSTRAINT fk_appointments_registrations_registration_id FOREIGN KEY (registration_id) REFERENCES public.registrations(id) ON DELETE CASCADE;


--
-- Name: facilities fk_facilities_facility_categories_facility_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.facilities
    ADD CONSTRAINT fk_facilities_facility_categories_facility_category_id FOREIGN KEY (facility_category_id) REFERENCES public.facility_categories(id) ON DELETE CASCADE;


--
-- Name: patients fk_patients_animal_type_animal_type_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.patients
    ADD CONSTRAINT fk_patients_animal_type_animal_type_id FOREIGN KEY (animal_type_id) REFERENCES public.animal_type(id) ON DELETE CASCADE;


--
-- Name: patients fk_patients_clients_client_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.patients
    ADD CONSTRAINT fk_patients_clients_client_id FOREIGN KEY (client_id) REFERENCES public.clients(id) ON DELETE CASCADE;


--
-- Name: registrations fk_registrations_clients_client_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.registrations
    ADD CONSTRAINT fk_registrations_clients_client_id FOREIGN KEY (client_id) REFERENCES public.clients(id) ON DELETE CASCADE;


--
-- Name: registrations fk_registrations_employees_employee_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.registrations
    ADD CONSTRAINT fk_registrations_employees_employee_id FOREIGN KEY (employee_id) REFERENCES public.employees(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

